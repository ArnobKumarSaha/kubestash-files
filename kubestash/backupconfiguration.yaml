apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: db-backup
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MongoDB
    namespace: demo
    name: source
  backends:
  - name: azure-backend
    storageRef:
      namespace: demo
      name: azure-storage
    retentionPolicy:
      name: mongodb-retention-policy
      namespace: demo
  sessions:
  # - name: specific-db
  #   sessionHistoryLimit: 3
  #   scheduler:
  #     schedule: "*/3 * * * *"
  #     successfulJobsHistoryLimit: 2
  #     failedJobsHistoryLimit: 2
  #     jobTemplate:
  #       backoffLimit: 1
  #   repositories:
  #   - name: specific-repo
  #     backend: linode-backend
  #     directory: /specific
  #     encryptionSecret:
  #       name: encrypt-secret # some addon may not support encryption
  #       namespace: demo
  #   addon:
  #     name: mongodb-addon
  #     tasks:
  #     - name: logical-backup
  #       params:
  #         args: --db=testdb
  - name: full-db
    sessionHistoryLimit: 3
    scheduler:
      schedule: "*/5 * * * *"
      successfulJobsHistoryLimit: 2
      failedJobsHistoryLimit: 2
      jobTemplate:
        backoffLimit: 1
    repositories:
    - name: full-repo
      backend: azure-backend
      directory: /full
      encryptionSecret:
        name: encrypt-secret # some addon may not support encryption
        namespace: demo
    addon:
      name: mongodb-addon
      tasks:
      - name: logical-backup
      jobTemplate:
        spec:
          securityContext:
            runAsUser: 999
  # - name: with-csi
  #   sessionHistoryLimit: 3
  #   scheduler:
  #     schedule: "*/5 * * * *"
  #     successfulJobsHistoryLimit: 2
  #     failedJobsHistoryLimit: 2
  #     jobTemplate:
  #       backoffLimit: 1
  #   repositories:
  #   - name: csi-repo
  #     backend: linode-backend
  #     directory: /csi
  #     # deletionPolicy: Delete
  #   addon:
  #     name: mongodb-addon
  #     tasks:
  #     - name: volume-snapshot
  #       variables:
  #       - name: volumeSnapshotClassName
  #         value: longhorn-vsc
        # params:
# NB: Deleting the backupConfiguration will not delete the created repositories & snapshots



#   DB_VERSION:6.0.5 backupSession:db-backup-with-csi-1713546900 imageRegistry: imageRepo: imageTag:
#   invokerKind:BackupConfiguration invokerName:db-backup licenseApiService: namespace:demo
#   taskName:volume-snapshot volumeSnapshotClassName:longhorn-vsc] =========================
# I0419 17:15:00.764888       1 task.go:121] [backup --namespace=demo --volume-snapshot-class-name=longhorn-vsc --backupsession=db-backup-with-csi-1713546900